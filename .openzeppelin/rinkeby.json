{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE892A0DA9779b32DDf4006b2ac61375C64f17081",
    "txHash": "0xc629d27d7969f3a7f39dd4c63a073b510a88e5a35e1f5f070d7781b610df37b3"
  },
  "proxies": [
    {
      "address": "0xbb9D5d10C990c74C50448131836B2d378867E7d7",
      "txHash": "0x7ead98c202693bb66b5457503e7d7ea8750feddcb0c8302616c4f94046461bc4",
      "kind": "transparent"
    },
    {
      "address": "0xAF56F85B1d5Bb4Be57F5D1455eAB578857cfE4Ae",
      "txHash": "0x0cea4e7c00212c0b505c10bbb75d8cf5c00d0986765b2165e00bfbef462181ea",
      "kind": "transparent"
    },
    {
      "address": "0xD1138BffE3C686A4D34e7fC6780394f33a834fc7",
      "txHash": "0xbd2cc168ffa5ff4f75d1060d474621af9f5e10fcbba20d4f7161542055e455ad",
      "kind": "transparent"
    }
  ],
  "impls": {
    "47c6de593dc859e7f49a625cd52a90250f40a9af483b1022e186580a7fc1b20a": {
      "address": "0x30faDAe8aEDFCbb3261F54564fb3eaD47Faaa892",
      "txHash": "0x8fd4b12bcc14267375cce3ee67dc5a2bb2b1aa1845f9e3916ebfbf3ae556126e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Traits",
            "label": "_traitTypes",
            "type": "t_array(t_string_storage)15_storage",
            "src": "../project:/contracts/Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "numHeadAndBodyTraits",
            "type": "t_uint16",
            "src": "../project:/contracts/Traits.sol:21"
          },
          {
            "contract": "Traits",
            "label": "traitData",
            "type": "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)4874_storage))",
            "src": "../project:/contracts/Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "chefRat",
            "type": "t_contract(IChefRat)3919",
            "src": "../project:/contracts/Traits.sol:24"
          }
        ],
        "types": {
          "t_array(t_string_storage)15_storage": {
            "label": "string[15]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)4874_storage))": {
            "label": "mapping(uint8 => mapping(uint8 => struct Traits.Trait))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_struct(Trait)4874_storage)": {
            "label": "mapping(uint8 => struct Traits.Trait)"
          },
          "t_struct(Trait)4874_storage": {
            "label": "struct Traits.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(IChefRat)3919": {
            "label": "contract IChefRat"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "21d2d21e39353e873c22075a9b6cca4a2fc08dc7159b1c36ff205276a77a2d50": {
      "address": "0x30553f1402b3b023D986068204A3Db57A4292d45",
      "txHash": "0x6752a70acad6582ae21b0001bfd76663cf6c4c76c8210547b3e090e622ab0435",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ChefRat",
            "label": "minted",
            "type": "t_uint16",
            "src": "../project:/contracts/ChefRat.sol:14"
          },
          {
            "contract": "ChefRat",
            "label": "numChefs",
            "type": "t_uint16",
            "src": "../project:/contracts/ChefRat.sol:15"
          },
          {
            "contract": "ChefRat",
            "label": "numRats",
            "type": "t_uint16",
            "src": "../project:/contracts/ChefRat.sol:16"
          },
          {
            "contract": "ChefRat",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/ChefRat.sol:17"
          },
          {
            "contract": "ChefRat",
            "label": "MAX_TOKENS",
            "type": "t_uint256",
            "src": "../project:/contracts/ChefRat.sol:18"
          },
          {
            "contract": "ChefRat",
            "label": "PAID_TOKENS",
            "type": "t_uint256",
            "src": "../project:/contracts/ChefRat.sol:19"
          },
          {
            "contract": "ChefRat",
            "label": "tokenTraits",
            "type": "t_mapping(t_uint256,t_struct(ChefRatStruct)3893_storage)",
            "src": "../project:/contracts/ChefRat.sol:21"
          },
          {
            "contract": "ChefRat",
            "label": "existingCombinations",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ChefRat.sol:22"
          },
          {
            "contract": "ChefRat",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ChefRat.sol:23"
          },
          {
            "contract": "ChefRat",
            "label": "rarities",
            "type": "t_array(t_array(t_uint8)dyn_storage)18_storage",
            "src": "../project:/contracts/ChefRat.sol:24"
          },
          {
            "contract": "ChefRat",
            "label": "traits",
            "type": "t_contract(ITraits)3940",
            "src": "../project:/contracts/ChefRat.sol:26"
          },
          {
            "contract": "ChefRat",
            "label": "kitchenPack",
            "type": "t_contract(IKitchenPack)3930",
            "src": "../project:/contracts/ChefRat.sol:27"
          }
        ],
        "types": {
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ChefRatStruct)3893_storage)": {
            "label": "mapping(uint256 => struct IChefRat.ChefRatStruct)"
          },
          "t_struct(ChefRatStruct)3893_storage": {
            "label": "struct IChefRat.ChefRatStruct",
            "members": [
              {
                "label": "isChef",
                "type": "t_bool"
              },
              {
                "label": "hat",
                "type": "t_uint8"
              },
              {
                "label": "eyes",
                "type": "t_uint8"
              },
              {
                "label": "piercing",
                "type": "t_uint8"
              },
              {
                "label": "mouth",
                "type": "t_uint8"
              },
              {
                "label": "neck",
                "type": "t_uint8"
              },
              {
                "label": "hand",
                "type": "t_uint8"
              },
              {
                "label": "tail",
                "type": "t_uint8"
              },
              {
                "label": "efficiency",
                "type": "t_uint8"
              },
              {
                "label": "tolerance",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_array(t_uint8)dyn_storage)18_storage": {
            "label": "uint8[][18]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_contract(ITraits)3940": {
            "label": "contract ITraits"
          },
          "t_contract(IKitchenPack)3930": {
            "label": "contract IKitchenPack"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b88af64e2dc386f0473aaa2b4994a45e91b541ef96fd549ada751223351ac41c": {
      "address": "0xaD568418F6eAE57ca7c523233d1290d782eDBf91",
      "txHash": "0x2d9124e476a3ee1c56b5e16f281f42ca4ace5ee067a7b5023816d4c5196f3cc9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "KitchenPack",
            "label": "chefRat",
            "type": "t_contract(ChefRat)3760",
            "src": "../project:/contracts/KitchenPack.sol:26"
          },
          {
            "contract": "KitchenPack",
            "label": "fastFood",
            "type": "t_contract(FastFood)3870",
            "src": "../project:/contracts/KitchenPack.sol:27"
          },
          {
            "contract": "KitchenPack",
            "label": "kitchen",
            "type": "t_mapping(t_uint256,t_struct(Stake)3969_storage)",
            "src": "../project:/contracts/KitchenPack.sol:29"
          },
          {
            "contract": "KitchenPack",
            "label": "pack",
            "type": "t_mapping(t_uint256,t_struct(Stake)3969_storage)",
            "src": "../project:/contracts/KitchenPack.sol:30"
          },
          {
            "contract": "KitchenPack",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:41"
          },
          {
            "contract": "KitchenPack",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:42"
          },
          {
            "contract": "KitchenPack",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:43"
          },
          {
            "contract": "KitchenPack",
            "label": "fastFoodPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:44"
          },
          {
            "contract": "KitchenPack",
            "label": "totalFastFoodEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:45"
          },
          {
            "contract": "KitchenPack",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:46"
          },
          {
            "contract": "KitchenPack",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:47"
          }
        ],
        "types": {
          "t_contract(ChefRat)3760": {
            "label": "contract ChefRat"
          },
          "t_contract(FastFood)3870": {
            "label": "contract FastFood"
          },
          "t_mapping(t_uint256,t_struct(Stake)3969_storage)": {
            "label": "mapping(uint256 => struct KitchenPack.Stake)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Stake)3969_storage": {
            "label": "struct KitchenPack.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
