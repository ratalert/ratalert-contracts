{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1fd1Ed0aa3fE7214e663866d05aF7872D3e4fe2f",
    "txHash": "0x0dfc95ffb3533c091420d62fbe8fe00b0640b57c51907c9de4f69c57247ccf29"
  },
  "proxies": [
    {
      "address": "0x97AF11571Ae3ADA99c1A038704788f879b2Ca04F",
      "txHash": "0x82e41c3d71850a9f9d7dd6e371be9523167d25331980d4c0024f0df558579517",
      "kind": "transparent"
    },
    {
      "address": "0x3Cd6c9a027A29c5C7FfFfE9aa5E6DC616fF29248",
      "txHash": "0x99c9949f99899115d2b2557d2e63436aa0dd925bbf24ef39a50ff918fc6f6ffe",
      "kind": "transparent"
    },
    {
      "address": "0x39A531259318FFBb3d0f8eb82Ccdbd351935F562",
      "txHash": "0x0bddd22efbe13f3a7ca95f3d483bda60e703cfc224e76e57abd31b4ad1488ced",
      "kind": "transparent"
    },
    {
      "address": "0xcEad8CE00d49Bd2d6d0DF0dE60D7f706CC3802C8",
      "txHash": "0x39ea7920bdc8fd85ee5e5568908ba3a42193aebe7c44b9c86839fa1ac0686133",
      "kind": "transparent"
    }
  ],
  "impls": {
    "47c6de593dc859e7f49a625cd52a90250f40a9af483b1022e186580a7fc1b20a": {
      "address": "0x294dC23F84E08B5D8Ad712B8223A1068bA37a29a",
      "txHash": "0x9d4ed226f2868eab7a9dc88418795f7f08d7c048772ed6ea1c33b932343b5f1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Traits",
            "label": "_traitTypes",
            "type": "t_array(t_string_storage)15_storage",
            "src": "../project:/contracts/Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "numHeadAndBodyTraits",
            "type": "t_uint16",
            "src": "../project:/contracts/Traits.sol:21"
          },
          {
            "contract": "Traits",
            "label": "traitData",
            "type": "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)5333_storage))",
            "src": "../project:/contracts/Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "chefRat",
            "type": "t_contract(IChefRat)3878",
            "src": "../project:/contracts/Traits.sol:24"
          }
        ],
        "types": {
          "t_array(t_string_storage)15_storage": {
            "label": "string[15]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)5333_storage))": {
            "label": "mapping(uint8 => mapping(uint8 => struct Traits.Trait))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_struct(Trait)5333_storage)": {
            "label": "mapping(uint8 => struct Traits.Trait)"
          },
          "t_struct(Trait)5333_storage": {
            "label": "struct Traits.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(IChefRat)3878": {
            "label": "contract IChefRat"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "21ab325b1f65c90805f0757cff1fe5909e02aa8a6049bb9ca5cabea0a5f88ee6": {
      "address": "0x783B0E70b7AA54eF106f5277BB283683a0b47760",
      "txHash": "0x5974144ec732b21d1d3f599cce44928ee67c45a983a00ad922a44693a062277e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:10"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:11"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:12"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:13"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:14"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:15"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:17"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:18"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:19"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:20"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:21"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:22"
          }
        ],
        "types": {
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "025ea8b5c93716bde7f5426b4bea0a66ac19729bccb6a432a015400f37f85571": {
      "address": "0xE332d032aFAC4A63c488F6a30921cb5EBFe37Df5",
      "txHash": "0xedaeec243dcc2c80fada681048a7c055ab5a6b7c5599e5722e5a52f73e4e3b58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ChefRat",
            "label": "minted",
            "type": "t_uint16",
            "src": "../project:/contracts/ChefRat.sol:15"
          },
          {
            "contract": "ChefRat",
            "label": "numChefs",
            "type": "t_uint16",
            "src": "../project:/contracts/ChefRat.sol:16"
          },
          {
            "contract": "ChefRat",
            "label": "numRats",
            "type": "t_uint16",
            "src": "../project:/contracts/ChefRat.sol:17"
          },
          {
            "contract": "ChefRat",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/ChefRat.sol:18"
          },
          {
            "contract": "ChefRat",
            "label": "MAX_TOKENS",
            "type": "t_uint256",
            "src": "../project:/contracts/ChefRat.sol:19"
          },
          {
            "contract": "ChefRat",
            "label": "PAID_TOKENS",
            "type": "t_uint256",
            "src": "../project:/contracts/ChefRat.sol:20"
          },
          {
            "contract": "ChefRat",
            "label": "tokenTraits",
            "type": "t_mapping(t_uint256,t_struct(ChefRatStruct)3852_storage)",
            "src": "../project:/contracts/ChefRat.sol:22"
          },
          {
            "contract": "ChefRat",
            "label": "existingCombinations",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/ChefRat.sol:23"
          },
          {
            "contract": "ChefRat",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ChefRat.sol:24"
          },
          {
            "contract": "ChefRat",
            "label": "rarities",
            "type": "t_array(t_array(t_uint8)dyn_storage)18_storage",
            "src": "../project:/contracts/ChefRat.sol:25"
          },
          {
            "contract": "ChefRat",
            "label": "traits",
            "type": "t_contract(ITraits)3921",
            "src": "../project:/contracts/ChefRat.sol:27"
          },
          {
            "contract": "ChefRat",
            "label": "properties",
            "type": "t_contract(IProperties)3911",
            "src": "../project:/contracts/ChefRat.sol:28"
          },
          {
            "contract": "ChefRat",
            "label": "kitchenPack",
            "type": "t_contract(IKitchenPack)3889",
            "src": "../project:/contracts/ChefRat.sol:29"
          }
        ],
        "types": {
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(ChefRatStruct)3852_storage)": {
            "label": "mapping(uint256 => struct IChefRat.ChefRatStruct)"
          },
          "t_struct(ChefRatStruct)3852_storage": {
            "label": "struct IChefRat.ChefRatStruct",
            "members": [
              {
                "label": "isChef",
                "type": "t_bool"
              },
              {
                "label": "hat",
                "type": "t_uint8"
              },
              {
                "label": "eyes",
                "type": "t_uint8"
              },
              {
                "label": "piercing",
                "type": "t_uint8"
              },
              {
                "label": "mouth",
                "type": "t_uint8"
              },
              {
                "label": "neck",
                "type": "t_uint8"
              },
              {
                "label": "hand",
                "type": "t_uint8"
              },
              {
                "label": "tail",
                "type": "t_uint8"
              },
              {
                "label": "efficiency",
                "type": "t_uint8"
              },
              {
                "label": "tolerance",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_array(t_uint8)dyn_storage)18_storage": {
            "label": "uint8[][18]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_contract(ITraits)3921": {
            "label": "contract ITraits"
          },
          "t_contract(IProperties)3911": {
            "label": "contract IProperties"
          },
          "t_contract(IKitchenPack)3889": {
            "label": "contract IKitchenPack"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d3503c4185262297bd2112af3aad3feaa40eee7d759f2bd068775277000121c1": {
      "address": "0x4b82Ca313A423f31dA4b8B59933ee7aF95d2fF7b",
      "txHash": "0x0745dd261ec0e67a9586dcc8b529c6531269eb6cebb7911b941305652518faee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "KitchenPack",
            "label": "chefRat",
            "type": "t_contract(ChefRat)3719",
            "src": "../project:/contracts/KitchenPack.sol:26"
          },
          {
            "contract": "KitchenPack",
            "label": "fastFood",
            "type": "t_contract(FastFood)3829",
            "src": "../project:/contracts/KitchenPack.sol:27"
          },
          {
            "contract": "KitchenPack",
            "label": "kitchen",
            "type": "t_mapping(t_uint256,t_struct(Stake)3950_storage)",
            "src": "../project:/contracts/KitchenPack.sol:29"
          },
          {
            "contract": "KitchenPack",
            "label": "pack",
            "type": "t_mapping(t_uint256,t_struct(Stake)3950_storage)",
            "src": "../project:/contracts/KitchenPack.sol:30"
          },
          {
            "contract": "KitchenPack",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:41"
          },
          {
            "contract": "KitchenPack",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:42"
          },
          {
            "contract": "KitchenPack",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:43"
          },
          {
            "contract": "KitchenPack",
            "label": "fastFoodPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:44"
          },
          {
            "contract": "KitchenPack",
            "label": "totalFastFoodEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:45"
          },
          {
            "contract": "KitchenPack",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:46"
          },
          {
            "contract": "KitchenPack",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenPack.sol:47"
          }
        ],
        "types": {
          "t_contract(ChefRat)3719": {
            "label": "contract ChefRat"
          },
          "t_contract(FastFood)3829": {
            "label": "contract FastFood"
          },
          "t_mapping(t_uint256,t_struct(Stake)3950_storage)": {
            "label": "mapping(uint256 => struct KitchenPack.Stake)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Stake)3950_storage": {
            "label": "struct KitchenPack.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
