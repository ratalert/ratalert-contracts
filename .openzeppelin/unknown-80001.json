{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5c7841F11e87a8CF24735a9c8D6317A4bAb8da80",
    "txHash": "0x3c6398caa4dfb80f0a261a5263bb27561b7d042fd096b1655c01628337ce91a4"
  },
  "proxies": [
    {
      "address": "0x0765F480E5B8dD2c99584d97077f601200c6260d",
      "txHash": "0xed4945088da2f7162425e4fdb076dbd889e3d42ce79dcc3032bb71c2e58bf416",
      "kind": "transparent"
    },
    {
      "address": "0x9ca2c69c8BE93e5521D7888CDfE3C6196AED9741",
      "txHash": "0x23b485d020cd7d6deb344b22940c7093b5da84f5187a71532468496389be9f79",
      "kind": "transparent"
    },
    {
      "address": "0x61AB553d00bF8E015cd1540ee5F4FcC7c1240eA9",
      "txHash": "0x325a5a041b0fb538b29cc2ad86d4532e4b8bf9d0b0363d4485561412d93673bf",
      "kind": "transparent"
    },
    {
      "address": "0x74fb1209C1c8673e695d768945C98bFe8Fd4CFCE",
      "txHash": "0x9f94f3de5b5e3d6e8e5be0928684bdfc1b002f989302e34e31f65f8e7efefb8b",
      "kind": "transparent"
    },
    {
      "address": "0x949ed239f57b1Cd6BBd4FF86Cf9010Cb6F898539",
      "txHash": "0xf0751906a38b99efbc362cd65e5a3a66de905e0eedea468e3bb1b07b4e52153c",
      "kind": "transparent"
    },
    {
      "address": "0xC719c1ac605ff6042d410103cB76428768b5c680",
      "txHash": "0xcac9f7d82209a840011fa1f9e22bab55a792696b861a75f6d4560a9a9c585983",
      "kind": "transparent"
    },
    {
      "address": "0xEE61Bd391BC05f343EAB559042F386C42a93EF12",
      "txHash": "0x3ebc575e3c0f7b99ae1333d71b662663ac18d8d31a448d2553fcb6e4242cad61",
      "kind": "transparent"
    },
    {
      "address": "0x602804DF03272aDEEE7557f6d225A7e8180c335D",
      "txHash": "0xeca918a021a90754f7080bbe9eb98919c0c73b3ae7b624e6b24f7148f74dfdbf",
      "kind": "transparent"
    },
    {
      "address": "0x2B2524f6f9E147936b0602ac014C602d5bba0c5F",
      "txHash": "0x581cae5883d767e9c812e9e303b4259b4f84709ace11d1c8058db7fffa4c7398",
      "kind": "transparent"
    },
    {
      "address": "0xFE49Af1Ea0DEa27b4820163fc1af220848f55238",
      "txHash": "0xfd5b043cc819d015ac8c26f331b0039acd0fb8a44583f12e99cd0faa50b58e13",
      "kind": "transparent"
    },
    {
      "address": "0xf0484a0F9A969e07a6D3EB7218d95E422ec3bAdc",
      "txHash": "0x4a5212927fe797483c193b225d77072803eaa67347abe1fa3ca0154c72f1cb2d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ee712af3b87aabbbe099cab257f98c4fb508ab71395cb80a2af25435c4701bd8": {
      "address": "0x670c89c6A6AC0500a8ebc139cab2754027dBA64C",
      "txHash": "0xebd0e8558461648a4eb46480d2ac53a290f1f6b36b274c4943555a37d98b5379",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "VRFConsumer",
            "label": "link",
            "type": "t_contract(LinkTokenInterface)265",
            "src": "../project:/contracts/VRFConsumer.sol:10"
          },
          {
            "contract": "VRFConsumer",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/VRFConsumer.sol:11"
          },
          {
            "contract": "VRFConsumer",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/VRFConsumer.sol:13"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Mint",
            "label": "rarities",
            "type": "t_array(t_array(t_uint8)dyn_storage)18_storage",
            "src": "../project:/contracts/Mint.sol:12"
          },
          {
            "contract": "Mint",
            "label": "existingCombinations",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../project:/contracts/Mint.sol:13"
          },
          {
            "contract": "Mint",
            "label": "character",
            "type": "t_contract(ICharacter)5837",
            "src": "../project:/contracts/Mint.sol:15"
          },
          {
            "contract": "Mint",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Mint.sol:16"
          },
          {
            "contract": "Mint",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Mint.sol:17"
          },
          {
            "contract": "Mint",
            "label": "vrfRequests",
            "type": "t_mapping(t_bytes32,t_struct(VRFStruct)5875_storage)",
            "src": "../project:/contracts/Mint.sol:18"
          }
        ],
        "types": {
          "t_array(t_array(t_uint8)dyn_storage)18_storage": {
            "label": "uint8[][18]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ICharacter)5837": {
            "label": "contract ICharacter"
          },
          "t_mapping(t_bytes32,t_struct(VRFStruct)5875_storage)": {
            "label": "mapping(bytes32 => struct IMint.VRFStruct)"
          },
          "t_struct(VRFStruct)5875_storage": {
            "label": "struct IMint.VRFStruct",
            "members": [
              {
                "label": "requestId",
                "type": "t_bytes32"
              },
              {
                "label": "sender",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint8"
              },
              {
                "label": "stake",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(LinkTokenInterface)265": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c8972f14e091d7c045e765b2750c15e70716330bf4b7b6d678f8a4c74e46177e": {
      "address": "0x6c13e40Fd34E78a40F1C71F73DE8eaD14E110322",
      "txHash": "0xe22da8dda76914f133a962eb4838c255871d94149f6ee4a7632005891433e56e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Traits",
            "label": "_traitTypes",
            "type": "t_array(t_string_storage)15_storage",
            "src": "../project:/contracts/Traits.sol:20"
          },
          {
            "contract": "Traits",
            "label": "numHeadAndBodyTraits",
            "type": "t_uint16",
            "src": "../project:/contracts/Traits.sol:21"
          },
          {
            "contract": "Traits",
            "label": "traitData",
            "type": "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)9022_storage))",
            "src": "../project:/contracts/Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "character",
            "type": "t_contract(ICharacter)5837",
            "src": "../project:/contracts/Traits.sol:24"
          }
        ],
        "types": {
          "t_array(t_string_storage)15_storage": {
            "label": "string[15]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)9022_storage))": {
            "label": "mapping(uint8 => mapping(uint8 => struct Traits.Trait))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_struct(Trait)9022_storage)": {
            "label": "mapping(uint8 => struct Traits.Trait)"
          },
          "t_struct(Trait)9022_storage": {
            "label": "struct Traits.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(ICharacter)5837": {
            "label": "contract ICharacter"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e9a3a1f62ddf258154a7725e7d672a750a0d630709271c04e99e1121043c38bf": {
      "address": "0xDBe9eDAB5E33686c42bD5cc3260d2Dcc6D9b382C",
      "txHash": "0x1d9038f86850fe583311c4eec40d212c9fbb50b002104e25b4625a84b433aa25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:10"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:11"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:12"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:13"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:14"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:15"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:17"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:18"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:19"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:20"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:21"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:22"
          }
        ],
        "types": {
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6b510b6f26b511b74a527c80a08af3e607893a65dadeda93530a50cb0f7c9124": {
      "address": "0x308AaaaFb499e1AF214ef88D897A21eE3c07b25F",
      "txHash": "0x5ffa5a9276f9de9bf4dd705a2ec13af8e5948efb1723e053028ce2cdc9259093",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Paywall",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:10"
          },
          {
            "contract": "Paywall",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/Paywall.sol:11"
          },
          {
            "contract": "Paywall",
            "label": "freeMints",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/Paywall.sol:12"
          },
          {
            "contract": "Paywall",
            "label": "onlyWhitelist",
            "type": "t_bool",
            "src": "../project:/contracts/Paywall.sol:13"
          },
          {
            "contract": "Paywall",
            "label": "fastFood",
            "type": "t_contract(FastFood)5588",
            "src": "../project:/contracts/Paywall.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(FastFood)5588": {
            "label": "contract FastFood"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dbf266ca549f54a95047f2404134e9a10078674df7055a317cdfa053ebda8ec2": {
      "address": "0x34F9bA70beA2f8D8E65FB4dfe1F97de283b10E97",
      "txHash": "0xad70177394bbce230dd9e52a80a1115ad0764b92027d2c35b816672a404147d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Character",
            "label": "minted",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:17"
          },
          {
            "contract": "Character",
            "label": "numChefs",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:18"
          },
          {
            "contract": "Character",
            "label": "numRats",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:19"
          },
          {
            "contract": "Character",
            "label": "maxTokens",
            "type": "t_uint256",
            "src": "../project:/contracts/Character.sol:20"
          },
          {
            "contract": "Character",
            "label": "gen0Tokens",
            "type": "t_uint256",
            "src": "../project:/contracts/Character.sol:21"
          },
          {
            "contract": "Character",
            "label": "tokenTraits",
            "type": "t_mapping(t_uint256,t_struct(CharacterStruct)5801_storage)",
            "src": "../project:/contracts/Character.sol:23"
          },
          {
            "contract": "Character",
            "label": "mintRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Character.sol:24"
          },
          {
            "contract": "Character",
            "label": "theMint",
            "type": "t_contract(IMint)5895",
            "src": "../project:/contracts/Character.sol:26"
          },
          {
            "contract": "Character",
            "label": "traits",
            "type": "t_contract(ITraits)5970",
            "src": "../project:/contracts/Character.sol:27"
          },
          {
            "contract": "Character",
            "label": "properties",
            "type": "t_contract(IProperties)5960",
            "src": "../project:/contracts/Character.sol:28"
          },
          {
            "contract": "Character",
            "label": "kitchen",
            "type": "t_contract(IVenue)5998",
            "src": "../project:/contracts/Character.sol:29"
          },
          {
            "contract": "Character",
            "label": "paywall",
            "type": "t_contract(IPaywall)5936",
            "src": "../project:/contracts/Character.sol:30"
          },
          {
            "contract": "Character",
            "label": "dao",
            "type": "t_address_payable",
            "src": "../project:/contracts/Character.sol:31"
          }
        ],
        "types": {
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CharacterStruct)5801_storage)": {
            "label": "mapping(uint256 => struct ICharacter.CharacterStruct)"
          },
          "t_struct(CharacterStruct)5801_storage": {
            "label": "struct ICharacter.CharacterStruct",
            "members": [
              {
                "label": "isChef",
                "type": "t_bool"
              },
              {
                "label": "hat",
                "type": "t_uint8"
              },
              {
                "label": "eyes",
                "type": "t_uint8"
              },
              {
                "label": "piercing",
                "type": "t_uint8"
              },
              {
                "label": "mouth",
                "type": "t_uint8"
              },
              {
                "label": "neck",
                "type": "t_uint8"
              },
              {
                "label": "hand",
                "type": "t_uint8"
              },
              {
                "label": "tail",
                "type": "t_uint8"
              },
              {
                "label": "efficiency",
                "type": "t_uint8"
              },
              {
                "label": "tolerance",
                "type": "t_uint8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_contract(IMint)5895": {
            "label": "contract IMint"
          },
          "t_contract(ITraits)5970": {
            "label": "contract ITraits"
          },
          "t_contract(IProperties)5960": {
            "label": "contract IProperties"
          },
          "t_contract(IVenue)5998": {
            "label": "contract IVenue"
          },
          "t_contract(IPaywall)5936": {
            "label": "contract IPaywall"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c878e2e6991f8a80350c9f77f105a5c6343a29439adb6c03687379eb319ea384": {
      "address": "0x455a5389710fa54596134C80A5d5DEA1b537c624",
      "txHash": "0x0857b225af2120144bb7345e4992000d801592827e8b3ce440ec830bf5f8826c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "KitchenShop",
            "label": "fastFood",
            "type": "t_contract(FastFood)5588",
            "src": "../project:/contracts/KitchenShop.sol:22"
          },
          {
            "contract": "KitchenShop",
            "label": "casualFood",
            "type": "t_contract(CasualFood)4635",
            "src": "../project:/contracts/KitchenShop.sol:23"
          },
          {
            "contract": "KitchenShop",
            "label": "character",
            "type": "t_contract(Character)5118",
            "src": "../project:/contracts/KitchenShop.sol:24"
          },
          {
            "contract": "KitchenShop",
            "label": "maxTokens",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:26"
          },
          {
            "contract": "KitchenShop",
            "label": "minSkill",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:27"
          },
          {
            "contract": "KitchenShop",
            "label": "minted",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:28"
          },
          {
            "contract": "KitchenShop",
            "label": "kitchenData",
            "type": "t_mapping(t_uint256,t_struct(KitchenData)6294_storage)",
            "src": "../project:/contracts/KitchenShop.sol:29"
          }
        ],
        "types": {
          "t_contract(FastFood)5588": {
            "label": "contract FastFood"
          },
          "t_contract(CasualFood)4635": {
            "label": "contract CasualFood"
          },
          "t_contract(Character)5118": {
            "label": "contract Character"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(KitchenData)6294_storage)": {
            "label": "mapping(uint256 => struct KitchenShop.KitchenData)"
          },
          "t_struct(KitchenData)6294_storage": {
            "label": "struct KitchenShop.KitchenData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "7230f0850c076cb29ecf2008e03585dc745442aaf5c2b83ef22682cd0c90000f": {
      "address": "0xc2c6d2580be8A3Ce09cBaF9394Bf08AC23c0aa32",
      "txHash": "0xe59e169a1b2e3c8bde793c1aa8223b2c8e35f20db26dff5d5e75fba54ea2d2c1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "VRFConsumer",
            "label": "link",
            "type": "t_contract(LinkTokenInterface)265",
            "src": "../project:/contracts/VRFConsumer.sol:10"
          },
          {
            "contract": "VRFConsumer",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/VRFConsumer.sol:11"
          },
          {
            "contract": "VRFConsumer",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/VRFConsumer.sol:13"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Claim",
            "label": "venues",
            "type": "t_mapping(t_address,t_contract(IVenue)5998)",
            "src": "../project:/contracts/Claim.sol:12"
          },
          {
            "contract": "Claim",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Claim.sol:13"
          },
          {
            "contract": "Claim",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Claim.sol:14"
          },
          {
            "contract": "Claim",
            "label": "vrfRequests",
            "type": "t_mapping(t_bytes32,t_struct(VRFStruct)5851_storage)",
            "src": "../project:/contracts/Claim.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_contract(IVenue)5998)": {
            "label": "mapping(address => contract IVenue)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVenue)5998": {
            "label": "contract IVenue"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(VRFStruct)5851_storage)": {
            "label": "mapping(bytes32 => struct IClaim.VRFStruct)"
          },
          "t_struct(VRFStruct)5851_storage": {
            "label": "struct IClaim.VRFStruct",
            "members": [
              {
                "label": "requestId",
                "type": "t_bytes32"
              },
              {
                "label": "venue",
                "type": "t_address"
              },
              {
                "label": "sender",
                "type": "t_address"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint16)dyn_storage"
              },
              {
                "label": "unstake",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(LinkTokenInterface)265": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "130c933db6e8807ab5d3c98090e236c14f77ef3d136b0da828619a8d72a188fb": {
      "address": "0x2FCF65c50A801B207B3EC94CB09Ab613D32147B9",
      "txHash": "0x1d021f2b77137bb12ca2261f7419ff3c6381d3488fb07a6209405605e6e0beb9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)5118",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)5864",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyInsanityRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyFatnessRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "McStake",
            "label": "foodToken",
            "type": "t_contract(FastFood)5588",
            "src": "../project:/contracts/McStake.sol:9"
          }
        ],
        "types": {
          "t_contract(FastFood)5588": {
            "label": "contract FastFood"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)5118": {
            "label": "contract Character"
          },
          "t_contract(IClaim)5864": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)10060_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)10060_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d785acde65e6f2053a77cdef8ea33b9a1ba4949b5d4767826a3bb16dfd6d8bd": {
      "address": "0x876337dE94e0b1543aF978dD3967543583F7485d",
      "txHash": "0x0e34649b53551df5f0f1408a0bc3c9f1f736e9661872665165fd4ac41386df48",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)5118",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)5864",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyInsanityRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyFatnessRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenShop",
            "type": "t_contract(KitchenShop)6738",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:9"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenId",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:10"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "charactersPerKitchen",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:11"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "minEfficiency",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:12"
          },
          {
            "contract": "TheStakehouse",
            "label": "foodToken",
            "type": "t_contract(CasualFood)4635",
            "src": "../project:/contracts/TheStakehouse.sol:10"
          }
        ],
        "types": {
          "t_contract(CasualFood)4635": {
            "label": "contract CasualFood"
          },
          "t_contract(KitchenShop)6738": {
            "label": "contract KitchenShop"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)5118": {
            "label": "contract Character"
          },
          "t_contract(IClaim)5864": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)10060_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)10060_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c6c2282f3eab1bab8ec117e78166102d885cc0dbe67ca89a8694f898e2a0162": {
      "address": "0xed18177c90D5bae60Bc3415FB392d328C91227Be",
      "txHash": "0x596bfea24adeb3e1fb6eba87c7a355a14e9c8d592bf23be2aca59e2925126201",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)5118",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)5864",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyInsanityRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyFatnessRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenShop",
            "type": "t_contract(KitchenShop)6738",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:9"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenId",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:10"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "charactersPerKitchen",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:11"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "minEfficiency",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:12"
          },
          {
            "contract": "LeStake",
            "label": "foodToken",
            "type": "t_contract(GourmetFood)5716",
            "src": "../project:/contracts/LeStake.sol:10"
          }
        ],
        "types": {
          "t_contract(GourmetFood)5716": {
            "label": "contract GourmetFood"
          },
          "t_contract(KitchenShop)6738": {
            "label": "contract KitchenShop"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)5118": {
            "label": "contract Character"
          },
          "t_contract(IClaim)5864": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)10060_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)10060_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf90990b5afd5a6cb34a2653d317a9d743bb8dde19b698a5a21f98ba94ab4aff": {
      "address": "0xA10126a096D8E580691412d1FEBD9aDD84aE105A",
      "txHash": "0x12f00ac4cf6fb003a86541d704ace8e965c54e09b22112f5a1272bbd9eb78852",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)5118",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)5864",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)10060_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyInsanityRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyFatnessRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          }
        ],
        "types": {
          "t_contract(Character)5118": {
            "label": "contract Character"
          },
          "t_contract(IClaim)5864": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)10060_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Stake)10060_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
