{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA0c7948b6652c3Eb910751996d67B8ec76cF06D6",
    "txHash": "0x9d2c565668ef4e19690b6f707ed35f1ee8bf55f5cbe056b3fc76e42091baad59"
  },
  "proxies": [
    {
      "address": "0xF7876C368AEe216f98b90Cf16c600926516c3337",
      "txHash": "0x0690dffb696ff4c4c15aed9e993ee9abc9d2185fe8a530ca819b2c38b342fff5",
      "kind": "transparent"
    },
    {
      "address": "0xB277BA92B92C6d1C186249f454E2Dd4433466e4F",
      "txHash": "0xe92e08d1ecb81ebdc7917811bfef63a8b6619a13b586b828d482bd15ece82cce",
      "kind": "transparent"
    },
    {
      "address": "0xc8C331092e4C74443D6d39Ea8C47E55B52DAd3C7",
      "txHash": "0x0d9872ad2a9a3309f6c346b19b713d8f658ec78b15d9d9b2b6e9a435e39f4ac2",
      "kind": "transparent"
    },
    {
      "address": "0x586Ea60F480113B428FCD5f786551b30BE49eB33",
      "txHash": "0x78c59550f8bbde2797f9dcfb4ca4156b80a7c3463ed6e2787f443c7142f3d32a",
      "kind": "transparent"
    },
    {
      "address": "0x4a0CA9aB63f4892DDBd2E2693c4DDba1B33afdFe",
      "txHash": "0x9390fd8ad0d72d7006c4d2c8d21fe260b6cd9974e5b1df937cda588a3ca0df3d",
      "kind": "transparent"
    },
    {
      "address": "0x3242CCF5d7f35BaB5A560e7ae2Fa64EfDCa9Cd1c",
      "txHash": "0x68d49e76bec344644313e5da4ecb37e6dcf60a402e298b18f7686606833a4449",
      "kind": "transparent"
    },
    {
      "address": "0xa7f7b2aF7233b2107c41BEF3F1D3f7acd4d4576B",
      "txHash": "0x6f397ab6952464815ce02917e44b26fbc0fc7b93e31258336d0e93baf8f140b9",
      "kind": "transparent"
    },
    {
      "address": "0x20d6aa7eA4142592daeB2E3A312C62D6318B40B4",
      "txHash": "0xc62d799aeb54f80a0c79dd44fe3fea546f41b5d5fb14aeab792853cc91a0492c",
      "kind": "transparent"
    },
    {
      "address": "0xc7e50625c2268308C57386D04C5A8f8ae8f6E136",
      "txHash": "0xf3dfda586200d397d769da769b6e177cf0599b7aa039c9a3e4f78ab007c85380",
      "kind": "transparent"
    },
    {
      "address": "0x6B9a151dE8E5EE719dC2fD307535EFBf3074aa89",
      "txHash": "0x630b15f9c16eef218cafce19c92125d04dadb6d4f0f3a67c1e3c0dc6c7836c32",
      "kind": "transparent"
    },
    {
      "address": "0x7e8F67232864f716a9E6f818F3b387828d934899",
      "txHash": "0xe816ad66e2274f70293b6b5726e9cff4c8839c66f4c07978b8cef5c5a7e7f856",
      "kind": "transparent"
    },
    {
      "address": "0x86816e7EEC84e563E9f7f5a0b72873E806cbE4ce",
      "txHash": "0xd95d9aa4616a4d128f187d5bc85e4e6967dea549e4cf71d76a815db5c775557d",
      "kind": "transparent"
    },
    {
      "address": "0x7b7F4123e1b060dbB1F98136A57C5eC8ca5540dc",
      "txHash": "0xb052c3cb83682fb5ee51dc152d9d4511870ed1f8dfd46c81b95cac6459402ac3",
      "kind": "transparent"
    },
    {
      "address": "0x2BbF185118233D81AAf15AfdccCB34C6554334ea",
      "txHash": "0xae2ac049c7d72fd4821e7c7f88047b757bea762fceeae520340f588c091944eb",
      "kind": "transparent"
    }
  ],
  "impls": {
    "83ec292d74d8bcdc395707f789f5b19f829f855e3a06d31f1dc1f5559ec6a3af": {
      "address": "0x5d32BeaA14b866b8c46BD1C0Bcec05a0F55D3520",
      "txHash": "0x772efd4c3a63e1729cb536552381d57641e63c608f79124dd5279f13dcece341",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Config",
            "label": "json",
            "type": "t_string_storage",
            "src": "../project:/contracts/Config.sol:9"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d55ccd49620abee65f45cc636c7479f1368602787aba0fc3404477bbe67e37e6": {
      "address": "0x0570bb7FFBf577C9f18C7d48C1C57598a7e85182",
      "txHash": "0x1c73ad1dabc8a08b951d22cb31214414dcf169f6e251b221c5ce4d5bff5c2d29",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "VRFConsumer",
            "label": "link",
            "type": "t_contract(LinkTokenInterface)265",
            "src": "../project:/contracts/VRFConsumer.sol:10"
          },
          {
            "contract": "VRFConsumer",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/VRFConsumer.sol:11"
          },
          {
            "contract": "VRFConsumer",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/VRFConsumer.sol:13"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Mint",
            "label": "rarities",
            "type": "t_array(t_array(t_uint8)dyn_storage)18_storage",
            "src": "../project:/contracts/Mint.sol:12"
          },
          {
            "contract": "Mint",
            "label": "existingCombinations",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../project:/contracts/Mint.sol:13"
          },
          {
            "contract": "Mint",
            "label": "character",
            "type": "t_contract(ICharacter)7333",
            "src": "../project:/contracts/Mint.sol:15"
          },
          {
            "contract": "Mint",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Mint.sol:16"
          },
          {
            "contract": "Mint",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Mint.sol:17"
          },
          {
            "contract": "Mint",
            "label": "vrfRequests",
            "type": "t_mapping(t_bytes32,t_struct(VRFStruct)7432_storage)",
            "src": "../project:/contracts/Mint.sol:18"
          }
        ],
        "types": {
          "t_array(t_array(t_uint8)dyn_storage)18_storage": {
            "label": "uint8[][18]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ICharacter)7333": {
            "label": "contract ICharacter"
          },
          "t_mapping(t_bytes32,t_struct(VRFStruct)7432_storage)": {
            "label": "mapping(bytes32 => struct IMint.VRFStruct)"
          },
          "t_struct(VRFStruct)7432_storage": {
            "label": "struct IMint.VRFStruct",
            "members": [
              {
                "label": "requestId",
                "type": "t_bytes32"
              },
              {
                "label": "sender",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint8"
              },
              {
                "label": "stake",
                "type": "t_bool"
              },
              {
                "label": "boost",
                "type": "t_int8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(LinkTokenInterface)265": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "378c92750287b730089a8a94fb0431afca2f5f94cf26a1f11b4ccbedeba20095": {
      "address": "0xc20219C5fBD20f112593b3e870238426be9a773f",
      "txHash": "0x765bb7e1100e0a998cbfd8a39c73d6dae4a86975cbd507736d8c47dae5d02ffd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Traits",
            "label": "_traitTypes",
            "type": "t_array(t_string_storage)16_storage",
            "src": "../project:/contracts/Traits.sol:21"
          },
          {
            "contract": "Traits",
            "label": "numHeadAndBodyTraits",
            "type": "t_uint16",
            "src": "../project:/contracts/Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "traitData",
            "type": "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)11569_storage))",
            "src": "../project:/contracts/Traits.sol:23"
          },
          {
            "contract": "Traits",
            "label": "character",
            "type": "t_contract(ICharacter)7333",
            "src": "../project:/contracts/Traits.sol:25"
          }
        ],
        "types": {
          "t_array(t_string_storage)16_storage": {
            "label": "string[16]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)11569_storage))": {
            "label": "mapping(uint8 => mapping(uint8 => struct Traits.Trait))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_struct(Trait)11569_storage)": {
            "label": "mapping(uint8 => struct Traits.Trait)"
          },
          "t_struct(Trait)11569_storage": {
            "label": "struct Traits.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(ICharacter)7333": {
            "label": "contract ICharacter"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e5202aad34403e92e8c94eef3cd634cd0379dd84c6e65c88de2c3ccd5528aa69": {
      "address": "0x1BA69637a33643BFa8Ea4767FfA324C4f86f9b2F",
      "txHash": "0xb7373e4eb65e7130a95f840f76d4695d18fb7b55c51b5a14ae578a0b20974806",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:10"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:11"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:12"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:13"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:14"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:15"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:17"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:18"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:19"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:20"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:21"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:22"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodDividerChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:24"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodMultiplierChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:25"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodOffsetChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:26"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodDividerRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:27"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodMultiplierRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:28"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodOffsetRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:29"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodDividerChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:30"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodMultiplierChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:31"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodOffsetChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:32"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodDividerRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:33"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodMultiplierRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:34"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodOffsetRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:35"
          }
        ],
        "types": {
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d6771fac435b92c9288f55e0bd24d6ac0513dcdeff735b8e820ab8261c101b6e": {
      "address": "0x4896eA55fe8d3663bb10EC5622CA2f7902bE220c",
      "txHash": "0xe224f44d07a9a4d844b33efdd14fac480d870f9c66c6d0ffd50a65483ec98f03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Paywall",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:11"
          },
          {
            "contract": "Paywall",
            "label": "whitelistBoost",
            "type": "t_int8",
            "src": "../project:/contracts/Paywall.sol:12"
          },
          {
            "contract": "Paywall",
            "label": "maxMintsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Paywall.sol:13"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier0",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:14"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier1",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:15"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier2",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:16"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier3",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:17"
          },
          {
            "contract": "Paywall",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/Paywall.sol:18"
          },
          {
            "contract": "Paywall",
            "label": "freeMints",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/Paywall.sol:19"
          },
          {
            "contract": "Paywall",
            "label": "onlyWhitelist",
            "type": "t_bool",
            "src": "../project:/contracts/Paywall.sol:20"
          },
          {
            "contract": "Paywall",
            "label": "fastFood",
            "type": "t_contract(FastFood)9665",
            "src": "../project:/contracts/Paywall.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(FastFood)9665": {
            "label": "contract FastFood"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bfe79eafe13f73256c230cc553d94606e4d95efeba29af84f22a41cd47ca0788": {
      "address": "0xaC4b08Fe50C9dd6D626AC678336EB707eaf779fB",
      "txHash": "0x9558c244cb08cba6c81ec3e42ebe9d0885d1c8a6ce5dfa660ea100742c80ea17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Character",
            "label": "paid",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:18"
          },
          {
            "contract": "Character",
            "label": "minted",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:19"
          },
          {
            "contract": "Character",
            "label": "numChefs",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:20"
          },
          {
            "contract": "Character",
            "label": "numRats",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:21"
          },
          {
            "contract": "Character",
            "label": "maxTokens",
            "type": "t_uint256",
            "src": "../project:/contracts/Character.sol:22"
          },
          {
            "contract": "Character",
            "label": "gen0Tokens",
            "type": "t_uint256",
            "src": "../project:/contracts/Character.sol:23"
          },
          {
            "contract": "Character",
            "label": "tokenTraits",
            "type": "t_mapping(t_uint256,t_struct(CharacterStruct)7280_storage)",
            "src": "../project:/contracts/Character.sol:25"
          },
          {
            "contract": "Character",
            "label": "theMint",
            "type": "t_contract(IMint)7462",
            "src": "../project:/contracts/Character.sol:27"
          },
          {
            "contract": "Character",
            "label": "traits",
            "type": "t_contract(ITraits)7539",
            "src": "../project:/contracts/Character.sol:28"
          },
          {
            "contract": "Character",
            "label": "properties",
            "type": "t_contract(IProperties)7529",
            "src": "../project:/contracts/Character.sol:29"
          },
          {
            "contract": "Character",
            "label": "kitchen",
            "type": "t_contract(IVenue)7574",
            "src": "../project:/contracts/Character.sol:30"
          },
          {
            "contract": "Character",
            "label": "paywall",
            "type": "t_contract(IPaywall)7505",
            "src": "../project:/contracts/Character.sol:31"
          }
        ],
        "types": {
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CharacterStruct)7280_storage)": {
            "label": "mapping(uint256 => struct ICharacter.CharacterStruct)"
          },
          "t_struct(CharacterStruct)7280_storage": {
            "label": "struct ICharacter.CharacterStruct",
            "members": [
              {
                "label": "isChef",
                "type": "t_bool"
              },
              {
                "label": "hat",
                "type": "t_uint8"
              },
              {
                "label": "eyes",
                "type": "t_uint8"
              },
              {
                "label": "piercing",
                "type": "t_uint8"
              },
              {
                "label": "mouth",
                "type": "t_uint8"
              },
              {
                "label": "neck",
                "type": "t_uint8"
              },
              {
                "label": "hand",
                "type": "t_uint8"
              },
              {
                "label": "tail",
                "type": "t_uint8"
              },
              {
                "label": "efficiency",
                "type": "t_uint8"
              },
              {
                "label": "tolerance",
                "type": "t_uint8"
              },
              {
                "label": "boost",
                "type": "t_int8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_contract(IMint)7462": {
            "label": "contract IMint"
          },
          "t_contract(ITraits)7539": {
            "label": "contract ITraits"
          },
          "t_contract(IProperties)7529": {
            "label": "contract IProperties"
          },
          "t_contract(IVenue)7574": {
            "label": "contract IVenue"
          },
          "t_contract(IPaywall)7505": {
            "label": "contract IPaywall"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "be00157f33ca1313bfa486036b682cb5d2f681d3c2e67d607c0621601a4f98ef": {
      "address": "0xB9BeA70d2D9616b464fEFD0A0AB3e4B73BEf4994",
      "txHash": "0x7fb23d232a919a76ddb88300a792a8e4d659397b15c6065f04c6cf142fa491e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "KitchenShop",
            "label": "fastFood",
            "type": "t_contract(FastFood)7015",
            "src": "../project:/contracts/KitchenShop.sol:24"
          },
          {
            "contract": "KitchenShop",
            "label": "casualFood",
            "type": "t_contract(CasualFood)5998",
            "src": "../project:/contracts/KitchenShop.sol:25"
          },
          {
            "contract": "KitchenShop",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/KitchenShop.sol:26"
          },
          {
            "contract": "KitchenShop",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/KitchenShop.sol:28"
          },
          {
            "contract": "KitchenShop",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/KitchenShop.sol:29"
          },
          {
            "contract": "KitchenShop",
            "label": "tokenSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:30"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier0",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:31"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier1",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:32"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier2",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:33"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier3",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:34"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier4",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:35"
          },
          {
            "contract": "KitchenShop",
            "label": "maxMintsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/KitchenShop.sol:36"
          },
          {
            "contract": "KitchenShop",
            "label": "maxTokens",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:37"
          },
          {
            "contract": "KitchenShop",
            "label": "minSkill",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:38"
          },
          {
            "contract": "KitchenShop",
            "label": "minted",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:39"
          },
          {
            "contract": "KitchenShop",
            "label": "kitchenData",
            "type": "t_mapping(t_uint256,t_struct(KitchenData)7883_storage)",
            "src": "../project:/contracts/KitchenShop.sol:40"
          }
        ],
        "types": {
          "t_contract(FastFood)7015": {
            "label": "contract FastFood"
          },
          "t_contract(CasualFood)5998": {
            "label": "contract CasualFood"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(KitchenData)7883_storage)": {
            "label": "mapping(uint256 => struct KitchenShop.KitchenData)"
          },
          "t_struct(KitchenData)7883_storage": {
            "label": "struct KitchenShop.KitchenData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "abe4ba57bae18e88f269ef72ab8d534fcd02d02a3a25ac899098469d876d3a6a": {
      "address": "0x0ecbC3cC831a8ebF91d93941eb9B204AF5764deD",
      "txHash": "0x2e929de048247bd3de641367ca3f14fdb54b3e31d314ff6b03018cf0632747b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "KitchenUsage",
            "label": "kitchenShop",
            "type": "t_contract(KitchenShop)8395",
            "src": "../project:/contracts/KitchenUsage.sol:16"
          },
          {
            "contract": "KitchenUsage",
            "label": "stakers",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_struct(Stake)7371_storage))",
            "src": "../project:/contracts/KitchenUsage.sol:21"
          },
          {
            "contract": "KitchenUsage",
            "label": "totalKitchensStaked",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenUsage.sol:22"
          },
          {
            "contract": "KitchenUsage",
            "label": "venues",
            "type": "t_mapping(t_uint256,t_contract(IVenue)7574)",
            "src": "../project:/contracts/KitchenUsage.sol:23"
          },
          {
            "contract": "KitchenUsage",
            "label": "chefsPerKitchen",
            "type": "t_uint8",
            "src": "../project:/contracts/KitchenUsage.sol:24"
          }
        ],
        "types": {
          "t_contract(KitchenShop)8395": {
            "label": "contract KitchenShop"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_struct(Stake)7371_storage))": {
            "label": "mapping(address => mapping(uint8 => struct IKitchenUsage.Stake))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_struct(Stake)7371_storage)": {
            "label": "mapping(uint8 => struct IKitchenUsage.Stake)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Stake)7371_storage": {
            "label": "struct IKitchenUsage.Stake",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "kitchenId",
                "type": "t_uint8"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_uint256,t_contract(IVenue)7574)": {
            "label": "mapping(uint256 => contract IVenue)"
          },
          "t_contract(IVenue)7574": {
            "label": "contract IVenue"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88306e7bcc77da5389acb555e561a22c879213c3c7f9999cf72db83f7a5826e4": {
      "address": "0xADC1c3bb5c1Ac0c7928553176258e9D0309Af66E",
      "txHash": "0x283ee4aa020ab92db074158a51d9637ff634845a91c923d583e47d78f54d3c2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "VRFConsumer",
            "label": "link",
            "type": "t_contract(LinkTokenInterface)265",
            "src": "../project:/contracts/VRFConsumer.sol:10"
          },
          {
            "contract": "VRFConsumer",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/VRFConsumer.sol:11"
          },
          {
            "contract": "VRFConsumer",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/VRFConsumer.sol:13"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Claim",
            "label": "venues",
            "type": "t_mapping(t_address,t_contract(IVenue)7574)",
            "src": "../project:/contracts/Claim.sol:12"
          },
          {
            "contract": "Claim",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Claim.sol:13"
          },
          {
            "contract": "Claim",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Claim.sol:14"
          },
          {
            "contract": "Claim",
            "label": "vrfRequests",
            "type": "t_mapping(t_bytes32,t_struct(VRFStruct)7347_storage)",
            "src": "../project:/contracts/Claim.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_contract(IVenue)7574)": {
            "label": "mapping(address => contract IVenue)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVenue)7574": {
            "label": "contract IVenue"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(VRFStruct)7347_storage)": {
            "label": "mapping(bytes32 => struct IClaim.VRFStruct)"
          },
          "t_struct(VRFStruct)7347_storage": {
            "label": "struct IClaim.VRFStruct",
            "members": [
              {
                "label": "requestId",
                "type": "t_bytes32"
              },
              {
                "label": "venue",
                "type": "t_address"
              },
              {
                "label": "sender",
                "type": "t_address"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint16)dyn_storage"
              },
              {
                "label": "unstake",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(LinkTokenInterface)265": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d5e3d8dcdf9256d6d0bf9f3a4733e2a6fa37f4a41724c1d3dd24458af956a7b5": {
      "address": "0xCa439D346E05F2786cA98dBB0100E6F6613a6e4A",
      "txHash": "0x2a3ad16c54a12d4ddeb94b3e5ebb8c1c33197617dc1d904ee6f274d80d5f626e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "McStake",
            "label": "foodToken",
            "type": "t_contract(FastFood)7015",
            "src": "../project:/contracts/McStake.sol:9"
          }
        ],
        "types": {
          "t_contract(FastFood)7015": {
            "label": "contract FastFood"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12714_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)12714_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5184e35286c87c152f67c43ce82299e5054582ca9b0db3b951b497b73bc22643": {
      "address": "0xb816927070AAD372c618eFAdD73Bf2b546A520C5",
      "txHash": "0xfd1cc7f3841575bb45a92633a885d2a76a93daf9317aa91cd3dec74f7781a036",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenUsage",
            "type": "t_contract(IKitchenUsage)7419",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:9"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenId",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:10"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "minEfficiency",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:11"
          },
          {
            "contract": "TheStakehouse",
            "label": "foodToken",
            "type": "t_contract(CasualFood)5998",
            "src": "../project:/contracts/TheStakehouse.sol:10"
          }
        ],
        "types": {
          "t_contract(CasualFood)5998": {
            "label": "contract CasualFood"
          },
          "t_contract(IKitchenUsage)7419": {
            "label": "contract IKitchenUsage"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12714_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)12714_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06614bd799862f44c627eb663143c81b305d860e81ed6139f747775daa14e28a": {
      "address": "0x0a48C379c9b94f2dC761F9e5C64eBD76f2A2604F",
      "txHash": "0xda6086d6b4c078c05fe76f62d34c389d7cd1a9bed720aa00cad39bbdb3b7cc7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenUsage",
            "type": "t_contract(IKitchenUsage)7419",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:9"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenId",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:10"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "minEfficiency",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:11"
          },
          {
            "contract": "LeStake",
            "label": "foodToken",
            "type": "t_contract(GourmetFood)7174",
            "src": "../project:/contracts/LeStake.sol:10"
          }
        ],
        "types": {
          "t_contract(GourmetFood)7174": {
            "label": "contract GourmetFood"
          },
          "t_contract(IKitchenUsage)7419": {
            "label": "contract IKitchenUsage"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12714_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)12714_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "120aa7c0b7ffd7b124ed7e0ba781e5315ac515e1647c6934fa7ec5f249703f9d": {
      "address": "0x4B34c1991Af99DB4eCa81045BB2638E3B75f8118",
      "txHash": "0x005899d0fe26f13167f3056ad60cb4e5b03f64f21f0ab4b999b4ae77fbab496a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12714_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          }
        ],
        "types": {
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12714_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Stake)12714_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1478189d7fa22186b5e411e072e1a5689f321de8b5fd5c8dac2f1feb972e790": {
      "address": "0x78Dbc4D417E9b542ff6fbfF343982cE252a11518",
      "txHash": "0xc59090a549da1470bcacc763e1a3e0bc3f4ef271fe48af4adfc77c07b2149770",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "PaywallV2",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/PaywallV2.sol:11"
          },
          {
            "contract": "PaywallV2",
            "label": "whitelistBoost",
            "type": "t_int8",
            "src": "../project:/contracts/PaywallV2.sol:12"
          },
          {
            "contract": "PaywallV2",
            "label": "maxMintsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/PaywallV2.sol:13"
          },
          {
            "contract": "PaywallV2",
            "label": "gen1PriceTier0",
            "type": "t_uint256",
            "src": "../project:/contracts/PaywallV2.sol:14"
          },
          {
            "contract": "PaywallV2",
            "label": "gen1PriceTier1",
            "type": "t_uint256",
            "src": "../project:/contracts/PaywallV2.sol:15"
          },
          {
            "contract": "PaywallV2",
            "label": "gen1PriceTier2",
            "type": "t_uint256",
            "src": "../project:/contracts/PaywallV2.sol:16"
          },
          {
            "contract": "PaywallV2",
            "label": "gen1PriceTier3",
            "type": "t_uint256",
            "src": "../project:/contracts/PaywallV2.sol:17"
          },
          {
            "contract": "PaywallV2",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/PaywallV2.sol:18"
          },
          {
            "contract": "PaywallV2",
            "label": "freeMints",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/PaywallV2.sol:19"
          },
          {
            "contract": "PaywallV2",
            "label": "onlyWhitelist",
            "type": "t_bool",
            "src": "../project:/contracts/PaywallV2.sol:20"
          },
          {
            "contract": "PaywallV2",
            "label": "fastFood",
            "type": "t_contract(FastFood)9665",
            "src": "../project:/contracts/PaywallV2.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(FastFood)9665": {
            "label": "contract FastFood"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
