{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x88cb4cfB0D2d1712D03fBEA385A0EE4b85a17160",
    "txHash": "0xeaec36fa9d0127cc7cd097271a3570faa671a3a33bc20e3ca4e502996c17502b"
  },
  "proxies": [
    {
      "address": "0xeA9759C546DfFBFb86F7B0bF0c50c29D9Be540ca",
      "txHash": "0xb571025c776bcfc244b85e6422ef1c535297b65a66bda50793f36f75cc6659db",
      "kind": "transparent"
    },
    {
      "address": "0xEb0958278D5B815deC994C643AC831fcD85Fa9a0",
      "txHash": "0xece84f5b40b7cc3333ec2925bac059f060d2997da623a38a99947eca7252760e",
      "kind": "transparent"
    },
    {
      "address": "0x5b808f3B3a8657DD3b018928CBb4B3e1dA74e032",
      "txHash": "0x40085ad222dbaa583aa8ea54dac479024efc85d7a27668c05834cd4f58481f4d",
      "kind": "transparent"
    },
    {
      "address": "0x71E84c0d9664027327c2ef147d227fF4ABEb015b",
      "txHash": "0x7a99e1a874ac6f37f6c34f4bbf52c9a19a6bcdb430ab58a071df7d7071a24e01",
      "kind": "transparent"
    },
    {
      "address": "0xEA700a72b8FeAA0D49A73Daee789fFE86a510DC3",
      "txHash": "0x2895678f27bb5fb857a57aaa458b1c13fe1e374441d3bfc9981458ce5272a889",
      "kind": "transparent"
    },
    {
      "address": "0xC6B66a9832271DE623CA73bf883469120A9208d2",
      "txHash": "0x5c3f9c51e4a437075dec868c1fb0e9f9ce7927a91e4fc3c0ec4a36afdb91218c",
      "kind": "transparent"
    },
    {
      "address": "0xb64B7d06Eeec6D65A5d7E5A66594b93768658119",
      "txHash": "0xbd97d0163f06e66abb15386f95953df941f82fd6f9f6ba78311765b04a2a3877",
      "kind": "transparent"
    },
    {
      "address": "0xa729B4682f3C197330DD60a3bf595bE7AE77936B",
      "txHash": "0xd76cfd55d4f6618a6a71b21520d0df57af42644bc808a4160cd4115122085a49",
      "kind": "transparent"
    },
    {
      "address": "0xBfe004e55d1131936edBbb306F7B1d641d088518",
      "txHash": "0x7a577e747a2082e7209f777e24d7f7a5a5af2a381890929a5dbe97a93027af9b",
      "kind": "transparent"
    },
    {
      "address": "0x39e9F168B3c5d14b252d54d580F9D827C5417D97",
      "txHash": "0xd6480d6ad2e38f5c182580329ae19a66c129a01af93704de453b4327432e8b92",
      "kind": "transparent"
    },
    {
      "address": "0xB3b0C629f85c95cb684Ef6F975693E4E034885fa",
      "txHash": "0xb5fe8e5d06fead86a9885f9e890ffe1ca58e648c9b22e1f798b9208eb4530efd",
      "kind": "transparent"
    },
    {
      "address": "0xb2a753d2181A9B264B808448D46fAC109A859F62",
      "txHash": "0x2c0ddd9671f4a05373c2ce2eaaaa17261d6d8afe9109e6749f547d14931f676f",
      "kind": "transparent"
    },
    {
      "address": "0x429E093a16500C9C6C7EaAC0ebc16256930777c5",
      "txHash": "0x10902fdb60e2d3d3dd0a7b1119ae7d707fc956e7942b70919e056eda2782194f",
      "kind": "transparent"
    },
    {
      "address": "0x35035d295006DfF9cCC5acB7E6bE886bB7195CAC",
      "txHash": "0xb59dcf4aa9c9846a12fc90566d32f43198f46a943d9db89678894364e19bea56",
      "kind": "transparent"
    }
  ],
  "impls": {
    "83ec292d74d8bcdc395707f789f5b19f829f855e3a06d31f1dc1f5559ec6a3af": {
      "address": "0xe0a0e0D87686E9776D6BeA1F360FE35F641bcA17",
      "txHash": "0x6646467caac80d780e7452af2d2fd9ef7696e438bb6aa2af710628e76950ce1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Config",
            "label": "json",
            "type": "t_string_storage",
            "src": "../project:/contracts/Config.sol:9"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d55ccd49620abee65f45cc636c7479f1368602787aba0fc3404477bbe67e37e6": {
      "address": "0x6B9CCC43EaD3B4Cfbe387372520442Db035e0AEA",
      "txHash": "0xa052cf8355fc880b03c2ae6e01f07344aee9d7740a623e54b9f700372a6b89d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "VRFConsumer",
            "label": "link",
            "type": "t_contract(LinkTokenInterface)265",
            "src": "../project:/contracts/VRFConsumer.sol:10"
          },
          {
            "contract": "VRFConsumer",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/VRFConsumer.sol:11"
          },
          {
            "contract": "VRFConsumer",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/VRFConsumer.sol:13"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Mint",
            "label": "rarities",
            "type": "t_array(t_array(t_uint8)dyn_storage)18_storage",
            "src": "../project:/contracts/Mint.sol:12"
          },
          {
            "contract": "Mint",
            "label": "existingCombinations",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../project:/contracts/Mint.sol:13"
          },
          {
            "contract": "Mint",
            "label": "character",
            "type": "t_contract(ICharacter)7333",
            "src": "../project:/contracts/Mint.sol:15"
          },
          {
            "contract": "Mint",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Mint.sol:16"
          },
          {
            "contract": "Mint",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Mint.sol:17"
          },
          {
            "contract": "Mint",
            "label": "vrfRequests",
            "type": "t_mapping(t_bytes32,t_struct(VRFStruct)7432_storage)",
            "src": "../project:/contracts/Mint.sol:18"
          }
        ],
        "types": {
          "t_array(t_array(t_uint8)dyn_storage)18_storage": {
            "label": "uint8[][18]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ICharacter)7333": {
            "label": "contract ICharacter"
          },
          "t_mapping(t_bytes32,t_struct(VRFStruct)7432_storage)": {
            "label": "mapping(bytes32 => struct IMint.VRFStruct)"
          },
          "t_struct(VRFStruct)7432_storage": {
            "label": "struct IMint.VRFStruct",
            "members": [
              {
                "label": "requestId",
                "type": "t_bytes32"
              },
              {
                "label": "sender",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint8"
              },
              {
                "label": "stake",
                "type": "t_bool"
              },
              {
                "label": "boost",
                "type": "t_int8"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(LinkTokenInterface)265": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "378c92750287b730089a8a94fb0431afca2f5f94cf26a1f11b4ccbedeba20095": {
      "address": "0x4E2af8117fCC0324AD1819DFF3da7E81c2542E2E",
      "txHash": "0xf50e337d50bec72e50bf2d96bc8442739bf4b5322950e18a552d19fa74d98154",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Traits",
            "label": "_traitTypes",
            "type": "t_array(t_string_storage)16_storage",
            "src": "../project:/contracts/Traits.sol:21"
          },
          {
            "contract": "Traits",
            "label": "numHeadAndBodyTraits",
            "type": "t_uint16",
            "src": "../project:/contracts/Traits.sol:22"
          },
          {
            "contract": "Traits",
            "label": "traitData",
            "type": "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)11581_storage))",
            "src": "../project:/contracts/Traits.sol:23"
          },
          {
            "contract": "Traits",
            "label": "character",
            "type": "t_contract(ICharacter)7333",
            "src": "../project:/contracts/Traits.sol:25"
          }
        ],
        "types": {
          "t_array(t_string_storage)16_storage": {
            "label": "string[16]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint8,t_mapping(t_uint8,t_struct(Trait)11581_storage))": {
            "label": "mapping(uint8 => mapping(uint8 => struct Traits.Trait))"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_struct(Trait)11581_storage)": {
            "label": "mapping(uint8 => struct Traits.Trait)"
          },
          "t_struct(Trait)11581_storage": {
            "label": "struct Traits.Trait",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_contract(ICharacter)7333": {
            "label": "contract ICharacter"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e5202aad34403e92e8c94eef3cd634cd0379dd84c6e65c88de2c3ccd5528aa69": {
      "address": "0xB383F4B12Bd60d8a7424eC8910680B8197be8F75",
      "txHash": "0xc09f15e7f1f2a86eaa7fc11fd6e065810321ffb2d962b92b271472319e2a174b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:10"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:11"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:12"
          },
          {
            "contract": "Properties",
            "label": "disasterEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:13"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:14"
          },
          {
            "contract": "Properties",
            "label": "disasterToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:15"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumChef",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:17"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyMinimumRat",
            "type": "t_int8",
            "src": "../project:/contracts/Properties.sol:18"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:19"
          },
          {
            "contract": "Properties",
            "label": "mishapEfficiencyLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:20"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossChef",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:21"
          },
          {
            "contract": "Properties",
            "label": "mishapToleranceLossRat",
            "type": "t_uint8",
            "src": "../project:/contracts/Properties.sol:22"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodDividerChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:24"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodMultiplierChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:25"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodOffsetChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:26"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodDividerRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:27"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodMultiplierRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:28"
          },
          {
            "contract": "Properties",
            "label": "disasterLikelihoodOffsetRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:29"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodDividerChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:30"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodMultiplierChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:31"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodOffsetChef",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:32"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodDividerRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:33"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodMultiplierRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:34"
          },
          {
            "contract": "Properties",
            "label": "mishapLikelihoodOffsetRat",
            "type": "t_int16",
            "src": "../project:/contracts/Properties.sol:35"
          }
        ],
        "types": {
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d6771fac435b92c9288f55e0bd24d6ac0513dcdeff735b8e820ab8261c101b6e": {
      "address": "0xb7D9D2d15735D8A248A794b777c0AaBa3eD7eB15",
      "txHash": "0x4605479b89fdbdfed29b0ad45076930d01d36892a5a64c93144c38e8bcad3ab5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Paywall",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:11"
          },
          {
            "contract": "Paywall",
            "label": "whitelistBoost",
            "type": "t_int8",
            "src": "../project:/contracts/Paywall.sol:12"
          },
          {
            "contract": "Paywall",
            "label": "maxMintsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Paywall.sol:13"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier0",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:14"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier1",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:15"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier2",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:16"
          },
          {
            "contract": "Paywall",
            "label": "gen1PriceTier3",
            "type": "t_uint256",
            "src": "../project:/contracts/Paywall.sol:17"
          },
          {
            "contract": "Paywall",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/Paywall.sol:18"
          },
          {
            "contract": "Paywall",
            "label": "freeMints",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "../project:/contracts/Paywall.sol:19"
          },
          {
            "contract": "Paywall",
            "label": "onlyWhitelist",
            "type": "t_bool",
            "src": "../project:/contracts/Paywall.sol:20"
          },
          {
            "contract": "Paywall",
            "label": "fastFood",
            "type": "t_contract(FastFood)7015",
            "src": "../project:/contracts/Paywall.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(FastFood)7015": {
            "label": "contract FastFood"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bfe79eafe13f73256c230cc553d94606e4d95efeba29af84f22a41cd47ca0788": {
      "address": "0xC93c0f84b9Cf0D4598295779520622bfb31EF2D1",
      "txHash": "0x11d45540b74b07936b2195d7d4f2ab0720a682ac762d240dca9df9d7e4a9b730",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Character",
            "label": "paid",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:18"
          },
          {
            "contract": "Character",
            "label": "minted",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:19"
          },
          {
            "contract": "Character",
            "label": "numChefs",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:20"
          },
          {
            "contract": "Character",
            "label": "numRats",
            "type": "t_uint16",
            "src": "../project:/contracts/Character.sol:21"
          },
          {
            "contract": "Character",
            "label": "maxTokens",
            "type": "t_uint256",
            "src": "../project:/contracts/Character.sol:22"
          },
          {
            "contract": "Character",
            "label": "gen0Tokens",
            "type": "t_uint256",
            "src": "../project:/contracts/Character.sol:23"
          },
          {
            "contract": "Character",
            "label": "tokenTraits",
            "type": "t_mapping(t_uint256,t_struct(CharacterStruct)7280_storage)",
            "src": "../project:/contracts/Character.sol:25"
          },
          {
            "contract": "Character",
            "label": "theMint",
            "type": "t_contract(IMint)7462",
            "src": "../project:/contracts/Character.sol:27"
          },
          {
            "contract": "Character",
            "label": "traits",
            "type": "t_contract(ITraits)7539",
            "src": "../project:/contracts/Character.sol:28"
          },
          {
            "contract": "Character",
            "label": "properties",
            "type": "t_contract(IProperties)7529",
            "src": "../project:/contracts/Character.sol:29"
          },
          {
            "contract": "Character",
            "label": "kitchen",
            "type": "t_contract(IVenue)7574",
            "src": "../project:/contracts/Character.sol:30"
          },
          {
            "contract": "Character",
            "label": "paywall",
            "type": "t_contract(IPaywall)7505",
            "src": "../project:/contracts/Character.sol:31"
          }
        ],
        "types": {
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(CharacterStruct)7280_storage)": {
            "label": "mapping(uint256 => struct ICharacter.CharacterStruct)"
          },
          "t_struct(CharacterStruct)7280_storage": {
            "label": "struct ICharacter.CharacterStruct",
            "members": [
              {
                "label": "isChef",
                "type": "t_bool"
              },
              {
                "label": "hat",
                "type": "t_uint8"
              },
              {
                "label": "eyes",
                "type": "t_uint8"
              },
              {
                "label": "piercing",
                "type": "t_uint8"
              },
              {
                "label": "mouth",
                "type": "t_uint8"
              },
              {
                "label": "neck",
                "type": "t_uint8"
              },
              {
                "label": "hand",
                "type": "t_uint8"
              },
              {
                "label": "tail",
                "type": "t_uint8"
              },
              {
                "label": "efficiency",
                "type": "t_uint8"
              },
              {
                "label": "tolerance",
                "type": "t_uint8"
              },
              {
                "label": "boost",
                "type": "t_int8"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_contract(IMint)7462": {
            "label": "contract IMint"
          },
          "t_contract(ITraits)7539": {
            "label": "contract ITraits"
          },
          "t_contract(IProperties)7529": {
            "label": "contract IProperties"
          },
          "t_contract(IVenue)7574": {
            "label": "contract IVenue"
          },
          "t_contract(IPaywall)7505": {
            "label": "contract IPaywall"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "be00157f33ca1313bfa486036b682cb5d2f681d3c2e67d607c0621601a4f98ef": {
      "address": "0x4db2b8Cb261EC6f57904DEca1ddbC28431AFBaD7",
      "txHash": "0xe8b3d1bc3a705f79781a978bc9bbae3a8ff55a8d6d75f0751f711e62dea4b92d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "KitchenShop",
            "label": "fastFood",
            "type": "t_contract(FastFood)7015",
            "src": "../project:/contracts/KitchenShop.sol:24"
          },
          {
            "contract": "KitchenShop",
            "label": "casualFood",
            "type": "t_contract(CasualFood)5998",
            "src": "../project:/contracts/KitchenShop.sol:25"
          },
          {
            "contract": "KitchenShop",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/KitchenShop.sol:26"
          },
          {
            "contract": "KitchenShop",
            "label": "name",
            "type": "t_string_storage",
            "src": "../project:/contracts/KitchenShop.sol:28"
          },
          {
            "contract": "KitchenShop",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "../project:/contracts/KitchenShop.sol:29"
          },
          {
            "contract": "KitchenShop",
            "label": "tokenSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:30"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier0",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:31"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier1",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:32"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier2",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:33"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier3",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:34"
          },
          {
            "contract": "KitchenShop",
            "label": "priceTier4",
            "type": "t_uint256",
            "src": "../project:/contracts/KitchenShop.sol:35"
          },
          {
            "contract": "KitchenShop",
            "label": "maxMintsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/KitchenShop.sol:36"
          },
          {
            "contract": "KitchenShop",
            "label": "maxTokens",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:37"
          },
          {
            "contract": "KitchenShop",
            "label": "minSkill",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:38"
          },
          {
            "contract": "KitchenShop",
            "label": "minted",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenShop.sol:39"
          },
          {
            "contract": "KitchenShop",
            "label": "kitchenData",
            "type": "t_mapping(t_uint256,t_struct(KitchenData)7883_storage)",
            "src": "../project:/contracts/KitchenShop.sol:40"
          }
        ],
        "types": {
          "t_contract(FastFood)7015": {
            "label": "contract FastFood"
          },
          "t_contract(CasualFood)5998": {
            "label": "contract CasualFood"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(KitchenData)7883_storage)": {
            "label": "mapping(uint256 => struct KitchenShop.KitchenData)"
          },
          "t_struct(KitchenData)7883_storage": {
            "label": "struct KitchenShop.KitchenData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "png",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "abe4ba57bae18e88f269ef72ab8d534fcd02d02a3a25ac899098469d876d3a6a": {
      "address": "0x830939fAED8B42e4ae23B3307744848c58027a93",
      "txHash": "0x5fbd21fb6808fad354034a6245beffb7ec26a33cf5a1b264e08550c3349a4125",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "KitchenUsage",
            "label": "kitchenShop",
            "type": "t_contract(KitchenShop)8395",
            "src": "../project:/contracts/KitchenUsage.sol:16"
          },
          {
            "contract": "KitchenUsage",
            "label": "stakers",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_struct(Stake)7371_storage))",
            "src": "../project:/contracts/KitchenUsage.sol:21"
          },
          {
            "contract": "KitchenUsage",
            "label": "totalKitchensStaked",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/KitchenUsage.sol:22"
          },
          {
            "contract": "KitchenUsage",
            "label": "venues",
            "type": "t_mapping(t_uint256,t_contract(IVenue)7574)",
            "src": "../project:/contracts/KitchenUsage.sol:23"
          },
          {
            "contract": "KitchenUsage",
            "label": "chefsPerKitchen",
            "type": "t_uint8",
            "src": "../project:/contracts/KitchenUsage.sol:24"
          }
        ],
        "types": {
          "t_contract(KitchenShop)8395": {
            "label": "contract KitchenShop"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_struct(Stake)7371_storage))": {
            "label": "mapping(address => mapping(uint8 => struct IKitchenUsage.Stake))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_struct(Stake)7371_storage)": {
            "label": "mapping(uint8 => struct IKitchenUsage.Stake)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Stake)7371_storage": {
            "label": "struct IKitchenUsage.Stake",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "kitchenId",
                "type": "t_uint8"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_uint256,t_contract(IVenue)7574)": {
            "label": "mapping(uint256 => contract IVenue)"
          },
          "t_contract(IVenue)7574": {
            "label": "contract IVenue"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88306e7bcc77da5389acb555e561a22c879213c3c7f9999cf72db83f7a5826e4": {
      "address": "0x986F8cC7bfB1a89A30336256FdFf2Dcd702332DB",
      "txHash": "0x207395b0a58e2dbdac2ff36d93a452816ff8c299ef9de36e24b67695c61e9378",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "VRFConsumer",
            "label": "link",
            "type": "t_contract(LinkTokenInterface)265",
            "src": "../project:/contracts/VRFConsumer.sol:10"
          },
          {
            "contract": "VRFConsumer",
            "label": "vrfCoordinator",
            "type": "t_address",
            "src": "../project:/contracts/VRFConsumer.sol:11"
          },
          {
            "contract": "VRFConsumer",
            "label": "nonces",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/VRFConsumer.sol:13"
          },
          {
            "contract": "ControllableUpgradeable",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/ControllableUpgradeable.sol:8"
          },
          {
            "contract": "Claim",
            "label": "venues",
            "type": "t_mapping(t_address,t_contract(IVenue)7574)",
            "src": "../project:/contracts/Claim.sol:12"
          },
          {
            "contract": "Claim",
            "label": "keyHash",
            "type": "t_bytes32",
            "src": "../project:/contracts/Claim.sol:13"
          },
          {
            "contract": "Claim",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Claim.sol:14"
          },
          {
            "contract": "Claim",
            "label": "vrfRequests",
            "type": "t_mapping(t_bytes32,t_struct(VRFStruct)7347_storage)",
            "src": "../project:/contracts/Claim.sol:15"
          }
        ],
        "types": {
          "t_mapping(t_address,t_contract(IVenue)7574)": {
            "label": "mapping(address => contract IVenue)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVenue)7574": {
            "label": "contract IVenue"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(VRFStruct)7347_storage)": {
            "label": "mapping(bytes32 => struct IClaim.VRFStruct)"
          },
          "t_struct(VRFStruct)7347_storage": {
            "label": "struct IClaim.VRFStruct",
            "members": [
              {
                "label": "requestId",
                "type": "t_bytes32"
              },
              {
                "label": "venue",
                "type": "t_address"
              },
              {
                "label": "sender",
                "type": "t_address"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint16)dyn_storage"
              },
              {
                "label": "unstake",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(LinkTokenInterface)265": {
            "label": "contract LinkTokenInterface"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5f470dddb2194a4cf32c17080963c870ed3fbcc367e6c630ee005543547a4d8": {
      "address": "0xbBb6a71492E981A2133C5a1f883A07aFcCBeCa8D",
      "txHash": "0x5273cc8bf3d6d3f58499bb014520266f12da7145a00dce2ba1c58cf97ac4e18d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "McStake",
            "label": "foodToken",
            "type": "t_contract(FastFood)7015",
            "src": "../project:/contracts/McStake.sol:9"
          }
        ],
        "types": {
          "t_contract(FastFood)7015": {
            "label": "contract FastFood"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12726_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)12726_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ae813b8ffcc434fd78f88bad7d2ff44e7ca2e3d3eabda4cfe593e2919c6179bf": {
      "address": "0xDC626b613B0D3A646936F956f7F7cc618c22784A",
      "txHash": "0xa0ac87905e4750cdd526deaf34e8ae558f4872594c033b94ad038a4509fb0caf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenUsage",
            "type": "t_contract(IKitchenUsage)7419",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:9"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenId",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:10"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "minEfficiency",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:11"
          },
          {
            "contract": "TheStakehouse",
            "label": "foodToken",
            "type": "t_contract(CasualFood)5998",
            "src": "../project:/contracts/TheStakehouse.sol:10"
          }
        ],
        "types": {
          "t_contract(CasualFood)5998": {
            "label": "contract CasualFood"
          },
          "t_contract(IKitchenUsage)7419": {
            "label": "contract IKitchenUsage"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12726_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)12726_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "769d575d6e32d974d09d11191f05517c5d390a7d1eaa77e0cd31aa415a53b754": {
      "address": "0x9BAAf633926C9Ec9BE341729d98022b4968F37A1",
      "txHash": "0x6a0381fd939765ceef0c77801bc393fa3d1f6c7f6086e50b68049b48e45d612f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          },
          {
            "contract": "Kitchen",
            "label": "foodTokenMaxSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:8"
          },
          {
            "contract": "Kitchen",
            "label": "dailyChefEarnings",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:9"
          },
          {
            "contract": "Kitchen",
            "label": "ratTheftPercentage",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:10"
          },
          {
            "contract": "Kitchen",
            "label": "unaccountedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:11"
          },
          {
            "contract": "Kitchen",
            "label": "totalFoodTokensEarned",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:12"
          },
          {
            "contract": "Kitchen",
            "label": "lastClaimTimestamp",
            "type": "t_uint256",
            "src": "../project:/contracts/Kitchen.sol:13"
          },
          {
            "contract": "Kitchen",
            "label": "chefEfficiencyMultiplier",
            "type": "t_uint8",
            "src": "../project:/contracts/Kitchen.sol:14"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyMultiplier",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:15"
          },
          {
            "contract": "Kitchen",
            "label": "ratEfficiencyOffset",
            "type": "t_int256",
            "src": "../project:/contracts/Kitchen.sol:16"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenUsage",
            "type": "t_contract(IKitchenUsage)7419",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:9"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "kitchenId",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:10"
          },
          {
            "contract": "EntrepreneurKitchen",
            "label": "minEfficiency",
            "type": "t_uint8",
            "src": "../project:/contracts/EntrepreneurKitchen.sol:11"
          },
          {
            "contract": "LeStake",
            "label": "foodToken",
            "type": "t_contract(GourmetFood)7174",
            "src": "../project:/contracts/LeStake.sol:10"
          }
        ],
        "types": {
          "t_contract(GourmetFood)7174": {
            "label": "contract GourmetFood"
          },
          "t_contract(IKitchenUsage)7419": {
            "label": "contract IKitchenUsage"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12726_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_struct(Stake)12726_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "120aa7c0b7ffd7b124ed7e0ba781e5315ac515e1647c6934fa7ec5f249703f9d": {
      "address": "0x6DDD32054533E25e9A24996537a9cE88A1c33933",
      "txHash": "0xe35b19b7bbec9cf7fef158dd7b72d5014d0f66ef30f91b7c6dd9cab324044342",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DOWable",
            "label": "dao",
            "type": "t_address",
            "src": "../project:/contracts/DOWable.sol:8"
          },
          {
            "contract": "Venue",
            "label": "character",
            "type": "t_contract(Character)6437",
            "src": "../project:/contracts/Venue.sol:25"
          },
          {
            "contract": "Venue",
            "label": "claim",
            "type": "t_contract(IClaim)7360",
            "src": "../project:/contracts/Venue.sol:26"
          },
          {
            "contract": "Venue",
            "label": "chefs",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:28"
          },
          {
            "contract": "Venue",
            "label": "rats",
            "type": "t_mapping(t_uint256,t_struct(Stake)12726_storage)",
            "src": "../project:/contracts/Venue.sol:29"
          },
          {
            "contract": "Venue",
            "label": "stakers",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:30"
          },
          {
            "contract": "Venue",
            "label": "claimRequests",
            "type": "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)",
            "src": "../project:/contracts/Venue.sol:31"
          },
          {
            "contract": "Venue",
            "label": "dailySkillRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:32"
          },
          {
            "contract": "Venue",
            "label": "dailyFreakRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:33"
          },
          {
            "contract": "Venue",
            "label": "dailyIntelligenceRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:34"
          },
          {
            "contract": "Venue",
            "label": "dailyBodyMassRate",
            "type": "t_int8",
            "src": "../project:/contracts/Venue.sol:35"
          },
          {
            "contract": "Venue",
            "label": "totalChefsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:36"
          },
          {
            "contract": "Venue",
            "label": "totalRatsStaked",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:37"
          },
          {
            "contract": "Venue",
            "label": "vestingPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:38"
          },
          {
            "contract": "Venue",
            "label": "accrualPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:39"
          },
          {
            "contract": "Venue",
            "label": "foodTokensPerRat",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:40"
          },
          {
            "contract": "Venue",
            "label": "maxClaimsPerTx",
            "type": "t_uint8",
            "src": "../project:/contracts/Venue.sol:41"
          },
          {
            "contract": "Venue",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Venue.sol:42"
          }
        ],
        "types": {
          "t_contract(Character)6437": {
            "label": "contract Character"
          },
          "t_contract(IClaim)7360": {
            "label": "contract IClaim"
          },
          "t_mapping(t_uint256,t_struct(Stake)12726_storage)": {
            "label": "mapping(uint256 => struct Venue.Stake)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Stake)12726_storage": {
            "label": "struct Venue.Stake",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint80"
              },
              {
                "label": "timestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_array(t_uint16)dyn_storage)": {
            "label": "mapping(bytes32 => uint16[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int8": {
            "label": "int8"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
