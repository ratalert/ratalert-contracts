{
  "contractName": "GenericPausable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GenericPausable.sol\":\"GenericPausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4d3a7c2729f266c54345044baf1080fb4a85208059cacea28c95622af4371db\",\"dweb:/ipfs/QmcHCX8reksSoQWjjYRcVoEHckz8AQ7CHKiKfzocpQq3Lg\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5beb2713aca05976562500789329e8c41320d00bd68ea9247856ec73894c3e3f\",\"dweb:/ipfs/QmQKwkpofsZYAzMZs7uNL7Qq58zVBuhoZCGpD6bJdUwyqy\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xf93da311a3b34a8363a759c404d575746fa38351fb29ecd646c608e27219ebec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cfc8c4107004a7ad97a340df1b6841d0eb0aacf4ba1d58f0cfbd0de73493cb7\",\"dweb:/ipfs/QmeBT3UzVzVEaPpisoHFFEGdUxAqNR3pmRnvn1oKseYSSv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf7d357ce97852f4fb71045919b1bb2c0ad0c820e3f06b9dd4451b2dc5a343\",\"dweb:/ipfs/QmWt96ZviufDu2qqS7Ln6UCJjfLyoFKbo6YKn54ao3o94z\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a3d42f1333d4224b7e6b7914e7ef5ee6d86586a3529bd1da15cbeece0d25b3\",\"dweb:/ipfs/QmXmFqePuCWzBcz9KyBepE7joHMg8jSjcmd5iayyG7jm3y\"]},\"project:/contracts/GenericPausable.sol\":{\"keccak256\":\"0x9ec53799334e17209b4f8881b5e034916f255077691fedc1e052c03d94e933cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd94cf6a1e354c08f6c1731a1ebba9e4959673dc774eb8520aae92cafa1edd13\",\"dweb:/ipfs/QmY6RTDwTjDo8FKfMVqoz9Hm2phVqcWzPuSbhPfZtowzMH\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\n\nabstract contract GenericPausable is OwnableUpgradeable, PausableUpgradeable {\n  function pause() external onlyOwner { _pause(); }\n  function unpause() external onlyOwner { _unpause(); }\n}\n",
  "sourcePath": "/Users/chris/workspace/ratalert/ratalert-contracts/contracts/GenericPausable.sol",
  "ast": {
    "absolutePath": "project:/contracts/GenericPausable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3267
      ],
      "ContextUpgradeable": [
        3311
      ],
      "GenericPausable": [
        5770
      ],
      "Initializable": [
        586
      ],
      "OwnableUpgradeable": [
        512
      ],
      "PausableUpgradeable": [
        699
      ]
    },
    "id": 5771,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5745,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 5746,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5771,
        "sourceUnit": 513,
        "src": "58:75:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 5747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5771,
        "sourceUnit": 700,
        "src": "134:78:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 5748,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 512,
              "src": "251:18:35"
            },
            "id": 5749,
            "nodeType": "InheritanceSpecifier",
            "src": "251:18:35"
          },
          {
            "baseName": {
              "id": 5750,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 699,
              "src": "271:19:35"
            },
            "id": 5751,
            "nodeType": "InheritanceSpecifier",
            "src": "271:19:35"
          }
        ],
        "canonicalName": "GenericPausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5770,
        "linearizedBaseContracts": [
          5770,
          699,
          512,
          3311,
          586
        ],
        "name": "GenericPausable",
        "nameLocation": "232:15:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5759,
              "nodeType": "Block",
              "src": "331:13:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5756,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "333:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:8:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5758,
                  "nodeType": "ExpressionStatement",
                  "src": "333:8:35"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 5760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5754,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5753,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 450,
                  "src": "321:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "321:9:35"
              }
            ],
            "name": "pause",
            "nameLocation": "304:5:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:2:35"
            },
            "returnParameters": {
              "id": 5755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:35"
            },
            "scope": 5770,
            "src": "295:49:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5768,
              "nodeType": "Block",
              "src": "385:15:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5765,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "387:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "387:10:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5767,
                  "nodeType": "ExpressionStatement",
                  "src": "387:10:35"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 5769,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5762,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 450,
                  "src": "375:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "375:9:35"
              }
            ],
            "name": "unpause",
            "nameLocation": "356:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:35"
            },
            "returnParameters": {
              "id": 5764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:35"
            },
            "scope": 5770,
            "src": "347:53:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5771,
        "src": "214:188:35",
        "usedErrors": []
      }
    ],
    "src": "33:370:35"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GenericPausable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3267
      ],
      "ContextUpgradeable": [
        3311
      ],
      "GenericPausable": [
        5770
      ],
      "Initializable": [
        586
      ],
      "OwnableUpgradeable": [
        512
      ],
      "PausableUpgradeable": [
        699
      ]
    },
    "id": 5771,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5745,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 5746,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5771,
        "sourceUnit": 513,
        "src": "58:75:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 5747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5771,
        "sourceUnit": 700,
        "src": "134:78:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 5748,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 512,
              "src": "251:18:35"
            },
            "id": 5749,
            "nodeType": "InheritanceSpecifier",
            "src": "251:18:35"
          },
          {
            "baseName": {
              "id": 5750,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 699,
              "src": "271:19:35"
            },
            "id": 5751,
            "nodeType": "InheritanceSpecifier",
            "src": "271:19:35"
          }
        ],
        "canonicalName": "GenericPausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5770,
        "linearizedBaseContracts": [
          5770,
          699,
          512,
          3311,
          586
        ],
        "name": "GenericPausable",
        "nameLocation": "232:15:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5759,
              "nodeType": "Block",
              "src": "331:13:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5756,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "333:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:8:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5758,
                  "nodeType": "ExpressionStatement",
                  "src": "333:8:35"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 5760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5754,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5753,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 450,
                  "src": "321:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "321:9:35"
              }
            ],
            "name": "pause",
            "nameLocation": "304:5:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:2:35"
            },
            "returnParameters": {
              "id": 5755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:35"
            },
            "scope": 5770,
            "src": "295:49:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5768,
              "nodeType": "Block",
              "src": "385:15:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5765,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "387:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "387:10:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5767,
                  "nodeType": "ExpressionStatement",
                  "src": "387:10:35"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 5769,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5762,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 450,
                  "src": "375:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "375:9:35"
              }
            ],
            "name": "unpause",
            "nameLocation": "356:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:35"
            },
            "returnParameters": {
              "id": 5764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:35"
            },
            "scope": 5770,
            "src": "347:53:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5771,
        "src": "214:188:35",
        "usedErrors": []
      }
    ],
    "src": "33:370:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-03-20T17:07:35.788Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}